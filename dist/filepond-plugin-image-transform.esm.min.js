/*
 * FilePondPluginImageTransform 3.2.2
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */

/* eslint-disable */
const isImage=t=>/^image/.test(t.type),createVector=(t,e)=>({x:t,y:e}),vectorDot=(t,e)=>t.x*e.x+t.y*e.y,vectorSubtract=(t,e)=>createVector(t.x-e.x,t.y-e.y),vectorDistanceSquared=(t,e)=>vectorDot(vectorSubtract(t,e),vectorSubtract(t,e)),vectorDistance=(t,e)=>Math.sqrt(vectorDistanceSquared(t,e)),getOffsetPointOnEdge=(t,e)=>{const a=t,n=e,i=1.5707963267948966-e,r=Math.sin(1.5707963267948966),o=Math.sin(n),s=Math.sin(i),l=Math.cos(i),h=a/r;return createVector(l*(h*o),l*(h*s))},getRotatedRectSize=(t,e)=>{const a=t.width,n=t.height,i=getOffsetPointOnEdge(a,e),r=getOffsetPointOnEdge(n,e),o=createVector(t.x+Math.abs(i.x),t.y-Math.abs(i.y)),s=createVector(t.x+t.width+Math.abs(r.y),t.y+Math.abs(r.x)),l=createVector(t.x-Math.abs(r.y),t.y+t.height-Math.abs(r.x));return{width:vectorDistance(o,s),height:vectorDistance(o,l)}},getImageRectZoomFactor=(t,e,a=0,n={x:.5,y:.5})=>{const i=n.x>.5?1-n.x:n.x,r=n.y>.5?1-n.y:n.y,o=2*i*t.width,s=2*r*t.height,l=getRotatedRectSize(e,a);return Math.max(l.width/o,l.height/s)},getCenteredCropRect=(t,e)=>{let a=t.width,n=a*e;n>t.height&&(a=(n=t.height)/e);return{x:.5*(t.width-a),y:.5*(t.height-n),width:a,height:n}},createSVGTransform=({createBlob:t,renameFile:e})=>(a,n,i)=>new Promise((r,o)=>{const s=(i.find(t=>"crop"===t.type)||{}).data;if(!s)return r(n);const l=new FileReader;l.onloadend=(()=>{if(a.archived)return r(n);const i=l.result,o=document.createElement("div");o.style.cssText="position:absolute;pointer-events:none;width:0;height:0;visibility:hidden;",o.innerHTML=i;const h=o.querySelector("svg");document.body.appendChild(o);const c=h.getBBox();o.parentNode.removeChild(o);const g=o.querySelector("title"),d=h.getAttribute("viewBox")||"",m=h.getAttribute("width")||"",u=h.getAttribute("height")||"";let p=parseFloat(m)||null,f=parseFloat(u)||null;const T=(m.match(/[a-z]+/)||[])[0]||"",w=(u.match(/[a-z]+/)||[])[0]||"",y=d.split(" ").map(parseFloat),M=y.length?{x:y[0],y:y[1],width:y[2],height:y[3]}:c;let x=null!=p?p:M.width,A=null!=f?f:M.height;h.style.overflow="visible",h.setAttribute("width",x),h.setAttribute("height",A);const I=s.aspectRatio||A/x,R=x,_=R*I,E=getImageRectZoomFactor({width:x,height:A},getCenteredCropRect({width:R,height:_},I),s.rotation,s.center),v=s.zoom*E,O=s.rotation*(180/Math.PI),b={x:.5*R,y:.5*_},F={x:b.x-x*s.center.x,y:b.y-A*s.center.y},S=[`rotate(${O} ${b.x} ${b.y})`,`translate(${b.x} ${b.y})`,`scale(${v})`,`translate(${-b.x} ${-b.y})`,`translate(${F.x} ${F.y})`],N=[`scale(${s.flip.horizontal?-1:1} ${s.flip.vertical?-1:1})`,`translate(${s.flip.horizontal?-x:0} ${s.flip.vertical?-A:0})`],U=`<?xml version="1.0" encoding="UTF-8"?>\n<svg width="${R}${T}" height="${_}${w}" \nviewBox="0 0 ${R} ${_}" \npreserveAspectRatio="xMinYMin"\nxmlns="http://www.w3.org/2000/svg">\n\x3c!-- Generator: FilePond Image Transform Plugin - https://pqina.nl/filepond --\x3e\n<title>${g?g.textContent:n.name}</title>\n<desc>Cropped with FilePond.</desc>\n<g transform="${S.join(" ")}">\n<g transform="${N.join(" ")}">\n${h.outerHTML}\n</g>\n</g>\n</svg>`;r(e(t(U,"image/svg+xml"),n.name))}),l.readAsText(n)}),MATRICES={1:()=>[1,0,0,1,0,0],2:t=>[-1,0,0,1,t,0],3:(t,e)=>[-1,0,0,-1,t,e],4:(t,e)=>[1,0,0,-1,0,e],5:()=>[0,1,1,0,0,0],6:(t,e)=>[0,1,-1,0,e,0],7:(t,e)=>[0,-1,-1,0,e,t],8:t=>[0,-1,1,0,0,t]},getImageOrientationMatrix=(t,e,a)=>(-1===a&&(a=1),MATRICES[a](t,e)),calculateCanvasSize=(t,e,a=1)=>{const n=t.height/t.width;let i=e,r=1,o=n;o>i&&(r=(o=i)/n);const s=Math.max(1/r,i/o),l=t.width/(a*r*s),h=l*e;return{width:Math.round(l),height:Math.round(h)}},isFlipped=t=>t&&(t.horizontal||t.vertical),getBitmap=(t,e,a)=>{if(!e&&!isFlipped(a))return t.width=t.naturalWidth,t.height=t.naturalHeight,t;const n=document.createElement("canvas"),i=t.naturalWidth,r=t.naturalHeight,o=e>=5&&e<=8;o?(n.width=r,n.height=i):(n.width=i,n.height=r);const s=n.getContext("2d");if(e&&s.transform(...getImageOrientationMatrix(i,r,e)),isFlipped(a)){const t=[1,0,0,1,0,0];(!o&&a.horizontal||o&a.vertical)&&(t[0]=-1,t[4]=i),(!o&&a.vertical||o&&a.horizontal)&&(t[3]=-1,t[5]=r),s.transform(...t)}return s.drawImage(t,0,0,i,r),n},imageToImageData=(t,e,a)=>{a||(a={});const n=getBitmap(t,e,a.flip),i={width:n.width,height:n.height},r=document.createElement("canvas"),o=a.aspectRatio||i.height/i.width,s=calculateCanvasSize(i,o,a.zoom);r.width=s.width,r.height=s.height;const l={x:.5*r.width,y:.5*r.height},h={x:l.x-i.width*(a.center?a.center.x:.5),y:l.y-i.height*(a.center?a.center.y:.5)},c={x:0,y:0,width:r.width,height:r.height,center:l},g=getImageRectZoomFactor(i,getCenteredCropRect(c,o),a.rotation,a.center),d=(a.zoom||1)*g,m=r.getContext("2d");return m.translate(l.x,l.y),m.rotate(a.rotation||0),m.scale(d,d),m.drawImage(n,h.x-l.x,h.y-l.y,i.width,i.height),m.getImageData(0,0,r.width,r.height)},objectToImageData=t=>{let e;try{e=new ImageData(t.width,t.height)}catch(a){e=document.createElement("canvas").getContext("2d").createImageData(t.width,t.height)}return e.data.set(t.data),e},TransformWorker=()=>{const t={resize:function(t,e){const{mode:a,upscale:n}=e;let{width:i,height:r}=e.size;if(null===i?i=r:null===r&&(r=i),"force"!==a){let e=i/t.width,o=r/t.height,s=1;if("cover"===a?s=Math.max(e,o):"contain"===a&&(s=Math.min(e,o)),s>1&&!1===n)return t;i=t.width*s,r=t.height*s}const o=t.width,s=t.height,l=Math.round(i),h=Math.round(r);for(var c=t.data,g=new Uint8ClampedArray(l*h*4),d=o/l,m=s/h,u=Math.ceil(d/2),p=Math.ceil(m/2),f=0;f<h;f++)for(var T=0;T<l;T++){for(var w=4*(T+f*l),y=0,M=0,x=0,A=gx_g=gx_b=gx_a=0,I=(f+.5)*m,R=Math.floor(f*m);R<(f+1)*m;R++)for(var _=Math.abs(I-(R+.5))/p,E=(T+.5)*d,v=_*_,O=Math.floor(T*d);O<(T+1)*d;O++){var b=Math.abs(E-(O+.5))/u,F=Math.sqrt(v+b*b);F>=-1&&F<=1&&(y=2*F*F*F-3*F*F+1)>0&&(b=4*(O+R*o),gx_a+=y*c[b+3],x+=y,c[b+3]<255&&(y=y*c[b+3]/250),A+=y*c[b],gx_g+=y*c[b+1],gx_b+=y*c[b+2],M+=y)}g[w]=A/M,g[w+1]=gx_g/M,g[w+2]=gx_b/M,g[w+3]=gx_a/x}return{data:g,width:l,height:h}}};self.onmessage=(e=>{((e,a)=>{a(((e,a)=>(e.forEach(e=>{const n=t[e.type];n&&(a=n(a,e.data))}),a))(e.transforms,e.imageData))})(e.data.message,t=>{self.postMessage({id:e.data.id,message:t},[t.data.buffer])})})},imageDataToBlob=(t,e)=>new Promise((a,n)=>{const i=document.createElement("canvas");i.width=t.width,i.height=t.height;i.getContext("2d").putImageData(t,0,0),i.toBlob(a,e.type,e.quality)}),correctOrientation=(t,e,a)=>{if(1165519206!==t.getUint32(e+4,!1))return;e+=4;const n=18761===t.getUint16(e+=6,!1);e+=t.getUint32(e+4,n);const i=t.getUint16(e,n);e+=2;for(let a=0;a<i;a++)if(274===t.getUint16(e+12*a,n))return t.setUint16(e+12*a+8,1,n),!0;return!1},readData=t=>{const e=new DataView(t);if(65496!==e.getUint16(0))return null;let a,n,i=2,r=!1;for(;i<e.byteLength;){a=e.getUint16(i,!1),n=e.getUint16(i+2,!1)+2;if(!(a>=65504&&a<=65519||65534===a))break;if(r||(r=correctOrientation(e,i)),i+n>e.byteLength)break;i+=n}return t.slice(0,i)},getImageHead=t=>new Promise((e,a)=>{const n=new FileReader;n.onload=(()=>e(readData(n.result)||null)),n.readAsArrayBuffer(t.slice(0,262144))}),createBitmapTransform=({loadImage:t,createWorker:e,getFilenameWithoutExtension:a,getFileFromBlob:n})=>{const i=(t,e,i)=>new Promise((r,o)=>{const s=e=>{const i=n(e,((t,e)=>{return`${a(t)}.${"image/jpeg"===e?"jpg":e.split("/")[1]}`})(t.name,(t=>"image/jpeg"===t||"image/png"===t?t:"image/jpeg")(e.type)));r(i)};imageDataToBlob(e,i).then(e=>{i.stripImageHead?s(e):getImageHead(t).then(t=>{null!==t&&(e=new Blob([t,e.slice(20)],{type:e.type})),s(e)})}).catch(t=>{console.error(t)})});return(a,n,r,o)=>new Promise((s,l)=>{const h=URL.createObjectURL(n);t(h).then(t=>{URL.revokeObjectURL(h),(t=>{if(a.archived)return s(n);const l=(r.find(t=>"crop"===t.type)||{}).data,h=imageToImageData(t,(a.getMetadata("exif")||{}).orientation||-1,l);if(!r.length)return i(n,h,o).then(s);const c=e(TransformWorker);c.post({transforms:r,imageData:h},t=>{if(a.archived)return s(n);i(n,objectToImageData(t),o).then(s),c.terminate()},[h.data.buffer])})(t)})})};"undefined"!=typeof window&&void 0!==window.document&&(HTMLCanvasElement.prototype.toBlob||Object.defineProperty(HTMLCanvasElement.prototype,"toBlob",{value:function(t,e,a){const n=this;setTimeout(()=>{const i=n.toDataURL(e,a).split(",")[1],r=atob(i);let o=r.length;const s=new Uint8Array(o);for(;o--;)s[o]=r.charCodeAt(o);t(new Blob([s],{type:e||"image/png"}))})}}));var plugin$1=t=>{const{addFilter:e,utils:a}=t,{Type:n,forin:i,loadImage:r,getFileFromBlob:o,getFilenameWithoutExtension:s,createWorker:l,createBlob:h,renameFile:c,isFile:g}=a,d=["crop","resize"],m=createBitmapTransform({loadImage:r,createWorker:l,getFileFromBlob:o,getFilenameWithoutExtension:s}),u=createSVGTransform({createBlob:h,renameFile:c});return e("SHOULD_PREPARE_OUTPUT",(t,{query:e,item:a})=>new Promise(t=>{t(!e("IS_ASYNC"))})),e("PREPARE_OUTPUT",(t,{query:e,item:a})=>new Promise(n=>{if(!g(t)||!isImage(t)||!e("GET_ALLOW_IMAGE_TRANSFORM")||a.archived)return n(t);const r=[];e("GET_IMAGE_TRANSFORM_VARIANTS_INCLUDE_ORIGINAL")&&r.push(()=>new Promise(a=>{a({name:e("GET_IMAGE_TRANSFORM_VARIANTS_ORIGINAL_NAME"),file:t})})),e("GET_IMAGE_TRANSFORM_VARIANTS_INCLUDE_DEFAULT")&&r.push((t,a,n)=>new Promise(i=>{t(a,n).then(t=>i({name:e("GET_IMAGE_TRANSFORM_VARIANTS_DEFAULT_NAME"),file:t}))}));const o=e("GET_IMAGE_TRANSFORM_VARIANTS")||{};i(o,(t,e)=>{const a=(t=>(e,a,n)=>e(a,t?t(n):n))(e);r.push((e,n,i)=>new Promise(r=>{a(e,n,i).then(e=>r({name:t,file:e}))}))});const s=e("GET_IMAGE_TRANSFORM_OUTPUT_QUALITY"),l=e("GET_IMAGE_TRANSFORM_OUTPUT_QUALITY_MODE"),h=null===s?null:s/100,c=e("GET_IMAGE_TRANSFORM_OUTPUT_MIME_TYPE"),p=e("GET_IMAGE_TRANSFORM_CLIENT_TRANSFORMS")||d;a.setMetadata("output",{quality:h,type:c,client:p},!0);const f=r.map(n=>n((t,n)=>new Promise((r,o)=>{const s=[];i(n,(t,e)=>{p.includes(t)&&s.push({type:t,data:e})}),(t=>{t.sort((t,e)=>{const a=d.indexOf(t.type),n=d.indexOf(e.type);return a<n?-1:a>n?1:0})})(s);const{type:h,quality:c}=n.output||{};return 0!==s.length||null!==c&&(null===c||"optional"!==l)||null!==h&&h!==t.type?/svg/.test(t.type)&&null===h?u(a,t,s).then(r):void m(a,t,s,{type:h||t.type,quality:c,stripImageHead:e("GET_IMAGE_TRANSFORM_OUTPUT_STRIP_IMAGE_HEAD")}).then(r):r(t)}),t,a.getMetadata()));Promise.all(f).then(t=>{n(1===t.length&&null===t[0].name?t[0].file:t)})})),{options:{allowImageTransform:[!0,n.BOOLEAN],imageTransformOutputMimeType:[null,n.STRING],imageTransformOutputQuality:[null,n.INT],imageTransformOutputStripImageHead:[!0,n.BOOLEAN],imageTransformClientTransforms:[null,n.ARRAY],imageTransformOutputQualityMode:["always",n.STRING],imageTransformVariants:[null,n.OBJECT],imageTransformVariantsIncludeDefault:[!0,n.BOOLEAN],imageTransformVariantsDefaultName:[null,n.STRING],imageTransformVariantsIncludeOriginal:[!1,n.BOOLEAN],imageTransformVariantsOriginalName:["original_",n.STRING]}}};const isBrowser="undefined"!=typeof window&&void 0!==window.document;isBrowser&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:plugin$1}));export default plugin$1;